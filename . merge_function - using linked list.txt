void linked_list::merge(node * p1, int i1, node * p2, int i2) {
	node * p4 = p1, *p5 = nullptr;
	node * curr = nullptr;
	node * p3 = nullptr;
	while (i1 >0 && i2 > 0) {
		if (p1->value < p2->value) {  curr = p1; p1 = p1->next; i1--; }
		else if (p1->value > p2->value) { 
			if (p1 == p4) {
				int temp = p1->value;
				p1->value = p2->value;
				p2->value = temp;
				p5 = p2->next;
				p2->next = p1->next;
				curr = p1;
				p1 = p2;
				i2--;
				if (i2 == 0) p3 = p2;
			}
			else {
				curr = p2; p2 = p2->next; i2--;
				if (i2 == 0) p3 = p2;
			}
		}
		else if (p1->value == p2->value) { 
			 curr->next = p1; 
			 p1 = p1->next; i1--;
			curr->next = p2; curr = p2; p2 = p2->next; i2 --;
			if (i2 == 0) p3 = p2;
		}
	}
	if (i1 == 0 && i2 == 0) {
		curr->next = p3;
		return; }
	if (i1 == 0) curr->next = p2;
	else if (i2 == 0) {
		curr->next = p1;
		while (i1 != 0)  curr = curr->next;
		curr->next = p3;
	}
}